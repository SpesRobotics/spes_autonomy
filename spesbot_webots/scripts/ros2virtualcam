#! /usr/bin/env python3

import rclpy
from rclpy.node import Node
from sensor_msgs.msg import Image
from cv_bridge import CvBridge
import cv2
import numpy as np
import pyvirtualcam

import time


class Ros2VirtualCam(Node):
    def __init__(self):
        super().__init__('ros2virtual_cam')
        self.subscription = self.create_subscription(Image, 'camera', self.image_callback, 1)
        self.cv_bridge = CvBridge()
        self.cam = pyvirtualcam.Camera(width=640, height=480, fps=20, device="/dev/video2")

    def image_callback(self, msg):
        cv_image = self.cv_bridge.imgmsg_to_cv2(msg)
        cv_image = cv2.cvtColor(cv_image, cv2.COLOR_BGRA2RGB)
        image = cv2.resize(cv_image, (640, 480))

        # self.get_logger().info(f'Device:2068 {self.cam.device}')
        
        frame = np.zeros((self.cam.height, self.cam.width, 3), np.uint8)  # RGB
        
        frame[:] = self.cam.frames_sent % 255  # grayscale animation
        self.cam.send(image)
        self.cam.sleep_until_next_frame()

def main(args=None):
    rclpy.init(args=args)
    ros2virtual_cam = Ros2VirtualCam()
    rclpy.spin(ros2virtual_cam)
    rclpy.shutdown()

if __name__ == '__main__':
    main()
